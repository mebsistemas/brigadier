unit TCConfiguracion;

interface
uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.ExtCtrls, Vcl.Menus,
  Data.DB, Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls, Vcl.Buttons, RxMemDS,Class_decimales,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.SQLite, FireDAC.Phys.SQLiteDef, WSFEV1,
  FireDAC.Stan.ExprFuncs, FireDAC.VCLUI.Wait, FireDAC.Comp.Client,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet;

  CONST
      MODO='MODO';
      NOMBRE='NOMBRE';
      SOLOTICKET='SOLOTICKET';
      CUITFACTURA='CUITFACTURA';
      PUNTOVENTA='PUNTOVENTA';
      CERTIFICADO='CERTIFICADO';
      LLAVE='LLAVE';
      IMPRIME='IMPRIME';
      IMPRESORA='IMPRESORA';
      ENVIAMAIL='ENVIAMAIL';
      CUENTAMAIL='CUENTAMAIL';
      SMTP='SMTP';
      USUARIOMAIL='USUARIOMAIL';
      PASSWORDMAIL='PASSWORDMAIL';
      IVA='IVA';
      DOMICILIO='DOMICILIO';
      TELEFONO='TELEFONO';
      IIBB='IIBB';
      FECHAINICIO='FECHAINICIO' ;

type
  TConfig = class
  private
// declaraciones solo accesibles desde este objeto
  FDQuery: TFDQuery;
  FDConnection: TFDConnection;
  FMODO,
  FNOMBRE,
  FSOLOTICKET,
  FCUITFACTURA,
  FPUNTOVENTA,
  FCERTIFICADO,
  FLLAVE,
  FIMPRIME,
  FIMPRESORA,
  FENVIAMAIL,
  FCUENTAMAIL,
  FSMTP,
  FUSUARIOMAIL,
  FPASSWORDMAIL,
  FIVA,
  FDOMICILIO,
  FTELEFONO,
  FIIBB,FFECHAINICIO:sTRING;

  FDIGITOCODIGOBARRA,FDIGITOHASTA,FCANTIDADIGITOCODIGOBARRA:STRING;

  PFMODO,
  PFNOMBRE,
  PFSOLOTICKET,
  PFCUITFACTURA,
  PFPUNTOVENTA,
  PFCERTIFICADO,
  PFLLAVE,
  PFIMPRIME,
  PFIMPRESORA,
  PFENVIAMAIL,
  PFCUENTAMAIL,
  PFSMTP,
  PFUSUARIOMAIL,
  PFPASSWORDMAIL,
  PFIVA,
  PFDOMICILIO,
  PFTELEFONO,
  PFIIBB,PFFECHAINICIO:sTRING;
  PFDIGITOCODIGOBARRA,PFDIGITOHASTA,PFCANTIDADIGITOCODIGOBARRA:STRING;


  public
       FUNCTION  GetDatos(PUESTOPC:LONGINT):boolean;
   constructor create(connec: TFDConnection;PUESTOPC:LONGINT);
   FUNCTION  PostDatos(PUESTOPC:LONGINT):boolean;
   PROPERTY  GET_FMODO: STRING READ FMODO;
   PROPERTY  GET_FNOMBRE : STRING   READ FNOMBRE;
   PROPERTY  GET_FSOLOTICKET: STRING   READ FSOLOTICKET;
   PROPERTY  GET_FCUITFACTURA: STRING  READ FCUITFACTURA;
   PROPERTY  GET_FPUNTOVENTA: STRING   READ FPUNTOVENTA;
   PROPERTY  GET_FCERTIFICADO: STRING  READ FCERTIFICADO;
   PROPERTY  GET_FLLAVE: STRING   READ FLLAVE;
   PROPERTY  GET_FIMPRIME: STRING   READ FIMPRIME;
   PROPERTY  GET_FIMPRESORA: STRING  READ FIMPRESORA;
   PROPERTY  GET_FENVIAMAIL: STRING  READ FENVIAMAIL;
   PROPERTY  GET_FCUENTAMAIL: STRING  READ FCUENTAMAIL;
   PROPERTY  GET_FSMTP: STRING      READ FSMTP;
   PROPERTY  GET_FUSUARIOMAIL: STRING    READ FUSUARIOMAIL;
   PROPERTY  GET_FPASSWORDMAIL: STRING   READ FPASSWORDMAIL;
   PROPERTY  GET_FIVA: STRING      READ FIVA;
   PROPERTY  GET_FDOMICILIO: STRING    READ FDOMICILIO;
   PROPERTY  GET_FTELEFONO: STRING    READ FTELEFONO;
   PROPERTY  GET_FIIBB:sTRING    READ FIIBB;
   PROPERTY  GET_FECHAINICIO:sTRING    READ FFECHAINICIO;
   PROPERTY  GET_FDIGITOCODIGOBARRA:sTRING    READ FDIGITOCODIGOBARRA;
   PROPERTY  GET_FDIGITOHASTA:sTRING    READ FDIGITOHASTA;
   PROPERTY  GET_FCANTIDADIGITOCODIGOBARRA:sTRING    READ FCANTIDADIGITOCODIGOBARRA;



   //---------------------------------
     PROPERTY POST_FMODO: STRING WRITE PFMODO;
   PROPERTY  POST_FNOMBRE : STRING   WRITE PFNOMBRE;
   PROPERTY  POST_FSOLOTICKET: STRING   WRITE PFSOLOTICKET;
   PROPERTY  POST_FCUITFACTURA: STRING  WRITE PFCUITFACTURA;
   PROPERTY  POST_FPUNTOVENTA: STRING   WRITE PFPUNTOVENTA;
   PROPERTY  POST_FCERTIFICADO: STRING  WRITE PFCERTIFICADO;
   PROPERTY  POST_FLLAVE: STRING   WRITE PFLLAVE;
   PROPERTY  POST_FIMPRIME: STRING   WRITE PFIMPRIME;
   PROPERTY  POST_FIMPRESORA: STRING  WRITE PFIMPRESORA;
   PROPERTY  POST_FENVIAMAIL: STRING  WRITE PFENVIAMAIL;
   PROPERTY  POST_FCUENTAMAIL: STRING  WRITE PFCUENTAMAIL;
   PROPERTY  POST_FSMTP: STRING      WRITE PFSMTP;
   PROPERTY  POST_FUSUARIOMAIL: STRING    WRITE PFUSUARIOMAIL;
   PROPERTY  POST_FPASSWORDMAIL: STRING   WRITE PFPASSWORDMAIL;
   PROPERTY  POST_FIVA: STRING      WRITE PFIVA;
   PROPERTY  POST_FDOMICILIO: STRING    WRITE PFDOMICILIO;
   PROPERTY  POST_FTELEFONO: STRING    WRITE PFTELEFONO;
   PROPERTY  POST_FIIBB:sTRING    WRITE PFIIBB;
   PROPERTY  POST_FECHAINICIO:sTRING    WRITE PFFECHAINICIO;
   PROPERTY  POST_FDIGITOCODIGOBARRA:sTRING    WRITE PFDIGITOCODIGOBARRA;
   PROPERTY  POST_FDIGITOHASTA:sTRING    WRITE PFDIGITOHASTA;
   PROPERTY  POST_FCANTIDADIGITOCODIGOBARRA:sTRING    WRITE PFCANTIDADIGITOCODIGOBARRA;


End ;



implementation
 constructor TConfig.create(connec: TFDConnection;PUESTOPC:LONGINT);
 begin
  FDConnection:=connec;
  GetDatos(PUESTOPC);

 end;
  FUNCTION  TConfig.PostDatos(PUESTOPC:LONGINT):boolean;
  VAR SQL:sTRING;  ID:INTEGER;
  BEGIN
    ID:=PUESTOPC;
    FDQuery:=tFDQuery.Create(nil);
    FDQuery.Connection:=FDConnection;
    FDQuery.Close;
    FDQuery.SQL.Clear;
    FDQuery.SQL.Add('select * from tconfiguracion where idtabla='+INTTOSTR(PUESTOPC));
    FDQuery.Open;
    if FDQUERY.IsEmpty=TRUE then
    BEGIN
          SQL:='INSERT INTO tconfiguracion '+
           '  (idtabla, MODO,NOMBRE,SOLOTICKET,'+
           'CUITFACTURA, PUNTOVENTA, CERTIFICADO,'+
           'LLAVE,IMPRIME,IMPRESORA,ENVIAMAIL,CUENTAMAIL,'+
           'SMTP,USUARIOMAIL, PASSWORDMAIL,'+
           'IVA,DOMICILIO, TELEFONO,IIBB,FECHAINICIO)'+
           ' VALUES ('+INTTOSTR(ID)+','+#39+TRIM(PFMODO)+#39+','+#39+TRIM(PFNOMBRE)+#39+','+#39+TRIM(PFSOLOTICKET)+#39+
           ','+#39+TRIM(PFCUITFACTURA)+#39+','+#39+TRIM(PFPUNTOVENTA)+#39+','+#39+TRIM(PFCERTIFICADO)+#39+
           ','+#39+TRIM(PFLLAVE)+#39+','+#39+TRIM(PFIMPRIME)+#39+','+#39+TRIM(PFIMPRESORA)+#39+','+#39+TRIM(PFENVIAMAIL)+#39+','+#39+TRIM(PFCUENTAMAIL)+#39+
           ','+#39+TRIM(PFSMTP)+#39+','+#39+TRIM(PFUSUARIOMAIL)+#39+','+#39+TRIM(PFPASSWORDMAIL)+#39+
          ','+#39+TRIM(PFIVA)+#39+','+#39+TRIM(PFDOMICILIO)+#39+','+#39+TRIM(PFTELEFONO)+#39+','+#39+TRIM(PFIIBB)+#39+','+#39+TRIM(PFFECHAINICIO)+#39+')';


    END ELSE BEGIN

        SQL:='UPDATE tconfiguracion  SET '+
           '   MODO='+#39+TRIM(PFMODO)+#39+
           ',  NOMBRE='+#39+TRIM(PFNOMBRE)+#39+
           ',  SOLOTICKET='+#39+TRIM(PFSOLOTICKET)+#39+
           ', CUITFACTURA='+#39+TRIM(PFCUITFACTURA)+#39+
           ', PUNTOVENTA='+#39+TRIM(PFPUNTOVENTA)+#39+
           ', CERTIFICADO='+#39+TRIM(PFCERTIFICADO)+#39+
           ', LLAVE='+#39+TRIM(PFLLAVE)+#39+
           ', IMPRIME='+#39+TRIM(PFIMPRIME)+#39+
           ', IMPRESORA='+#39+TRIM(PFIMPRESORA)+#39+
           ', ENVIAMAIL='+#39+TRIM(PFENVIAMAIL)+#39+
           ', CUENTAMAIL='+#39+TRIM(PFCUENTAMAIL)+#39+
           ', SMTP='+#39+TRIM(PFSMTP)+#39+
           ', USUARIOMAIL='+#39+TRIM(PFUSUARIOMAIL)+#39+
           ', PASSWORDMAIL='+#39+TRIM(PFPASSWORDMAIL)+#39+
           ', IVA='+#39+TRIM(PFIVA)+#39+
           ', DOMICILIO='+#39+TRIM(PFDOMICILIO)+#39+
           ', TELEFONO='+#39+TRIM(PFTELEFONO)+#39+
           ', IIBB='+#39+TRIM(PFIIBB)+#39+
           ', FECHAINICIO='+#39+TRIM(PFFECHAINICIO)+#39+
           ' WHERE IDTABLA='+INTTOSTR(ID);

    END;

    FDConnection.StartTransaction;
    TRY
      FDQuery.Close;
      FDQuery.SQL.Clear;
      FDQuery.SQL.Add(SQL);
      FDQuery.ExecSQL;
      FDConnection.Commit;

    EXCEPT
         FDConnection.Rollback;
    END;

    GetDatos(ID);
  END;

 FUNCTION  TConfig.GetDatos(PUESTOPC:LONGINT):boolean;
 begin
    FDQuery:=tFDQuery.Create(nil);
    FDQuery.Connection:=FDConnection;
    FDQuery.Close;
    FDQuery.SQL.Clear;
    FDQuery.SQL.Add('select * from tconfiguracion where idtabla='+INTTOSTR(PUESTOPC));
    FDQuery.Open;
    FMODO:=trim(FDQuery.FieldByName(MODO).AsString);
    FNOMBRE:=trim(FDQuery.FieldByName(NOMBRE).AsString);
    FSOLOTICKET:=trim(FDQuery.FieldByName(SOLOTICKET).AsString);
    FCUITFACTURA:=trim(FDQuery.FieldByName(CUITFACTURA).AsString);
    FPUNTOVENTA:=trim(FDQuery.FieldByName(PUNTOVENTA).AsString);
    FCERTIFICADO:=trim(FDQuery.FieldByName(CERTIFICADO).AsString);
    FLLAVE:=trim(FDQuery.FieldByName(LLAVE).AsString);
    FIMPRIME:=trim(FDQuery.FieldByName(IMPRIME).AsString);
    FIMPRESORA:=trim(FDQuery.FieldByName(IMPRESORA).AsString);
    FENVIAMAIL:=trim(FDQuery.FieldByName(ENVIAMAIL).AsString);
    FCUENTAMAIL:=trim(FDQuery.FieldByName(CUENTAMAIL).AsString);
    FSMTP:=trim(FDQuery.FieldByName(SMTP).AsString);
    FUSUARIOMAIL:=trim(FDQuery.FieldByName(USUARIOMAIL).AsString);
    FPASSWORDMAIL:=trim(FDQuery.FieldByName(PASSWORDMAIL).AsString);
    FIVA:=trim(FDQuery.FieldByName(IVA).AsString);
    FDOMICILIO:=trim(FDQuery.FieldByName(DOMICILIO).AsString);
    FTELEFONO:=trim(FDQuery.FieldByName(TELEFONO).AsString);
    FIIBB:=trim(FDQuery.FieldByName(IIBB).AsString);
    FFECHAINICIO:=trim(FDQuery.FieldByName(FECHAINICIO).AsString);
    FDIGITOCODIGOBARRA:=trim(FDQuery.FieldByName('DIGITOCODIGOBARRA').AsString);
    FDIGITOHASTA:=trim(FDQuery.FieldByName('DIGITOHASTA').AsString);
    FCANTIDADIGITOCODIGOBARRA:=trim(FDQuery.FieldByName('CANTIDADIGITOCODIGOBARRA').AsString);

    FDQuery.Free;

 end;


end.
